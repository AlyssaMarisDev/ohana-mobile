name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # Quality checks
  quality:
    runs-on: ubuntu-latest
    name: Code Quality

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check for security vulnerabilities
        run: npm audit --audit-level=moderate

      - name: Run linting
        run: npm run lint

      - name: Run linting with auto-fix check
        run: npm run lint:fix --dry-run

      - name: Check formatting with Prettier
        run: npx prettier --check "**/*.{js,jsx,ts,tsx,json,md}"

  # Testing
  test:
    runs-on: ubuntu-latest
    name: Testing
    needs: quality

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Run test coverage
        run: npm run test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  # Build verification (for main branch only)
  build:
    runs-on: ubuntu-latest
    name: Build Verification
    needs: [quality, test]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Verify Expo configuration
        run: npx expo doctor

      - name: Check bundle size (dry run)
        run: npx expo export --platform web --output-dir ./dist --clear

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: ./dist
          retention-days: 7
